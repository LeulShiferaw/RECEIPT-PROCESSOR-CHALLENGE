package main

import (
	"fmt"
	"log"
	"net/http"

	"github.com/gorilla/mux"
)

/*
	IMPORTANT NOTE:

	1. This program was not generated by LLMs except for testing handlers
	   but I did use their help as go is not my main language.
	   For that reason, I decided to include the AI parts as well.
	   This includes the extra points for using AI and the error message in api.yml.
	2. To run, make sure to 'go install github.com/gorilla/mux' and 'go get github.com/gorilla/mux' afterwards
	3. Please go to README.md for installation instructions
	4. Feel free uncomment the fmt prints for debugging purposes (it helps to see what has been added exactly)
*/

// Constants for error message
var badRequest = "Please verify input."
var notFound = "No receipt found for that ID."

// Used for generating unique id for each request
// We can use UUID instead but I though this would be a simpler approach
var idCounter int

// Non persistent memory
var memory = make(map[string]Receipt)

// Item that is part of receipt
type Item struct {
	ShortDescription string `json:"shortDescription"`
	Price            string `json:"price"`
}

// Receipt Datastructure for receiving json data
type Receipt struct {
	Retailer     string `json:"retailer"`
	PurchaseDate string `json:"purchaseDate"`
	PurchaseTime string `json:"purchaseTime"`
	Total        string `json:"total"`
	Items        []Item `json:"items"`
}

// Helper function for generating unique id
func generateID() int {
	idCounter++
	return idCounter
}

func main() {
	r := mux.NewRouter()

	r.HandleFunc("/", defaultHandler).Methods("GET")
	r.HandleFunc("/receipts/process", processReceiptHandler).Methods("POST")
	r.HandleFunc("/receipts/{id}/points", getPointsHandler).Methods("GET")

	fmt.Println("Running on localhost:8080")
	log.Fatal(http.ListenAndServe(":8080", r))
}
